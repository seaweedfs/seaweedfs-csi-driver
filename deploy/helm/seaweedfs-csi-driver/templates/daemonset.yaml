{{- if .Values.node.enabled}}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ template "seaweedfs-csi-driver.name" . }}-node
spec:
  selector:
    matchLabels:
      app: {{ template "seaweedfs-csi-driver.name" . }}-node
  updateStrategy:
    {{ toYaml .Values.node.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "seaweedfs-csi-driver.name" . }}-node
      {{- if .Values.node.injectTopologyInfoFromNodeLabel.enabled }}
      annotations:
        # Tell KubeMod to make node metadata available to pod ModRules.
        ref.kubemod.io/inject-node-ref: "true"
      {{- end }}
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: {{ template "seaweedfs-csi-driver.name" . }}-node-sa
      #hostNetwork: true
      #dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.node.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.node.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
        # SeaweedFs Plugin (node)
        - name: csi-seaweedfs-plugin
          securityContext: {{ toYaml .Values.seaweedfsCsiPlugin.securityContext | nindent 12 }}
          image: {{.Values.seaweedfsCsiPlugin.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --endpoint=$(CSI_ENDPOINT)
            - --filer=$(SEAWEEDFS_FILER)
            - --nodeid=$(NODE_ID)
            - --driverName=$(DRIVER_NAME)
            - --cacheDir=/var/cache/seaweedfs
            {{- if ne "none" .Values.dataLocality}}
            - "--dataLocality={{ .Values.dataLocality }}"
            {{- end }}
            {{- if .Values.node.injectTopologyInfoFromNodeLabel.enabled }}
            - --dataCenter=$(DATACENTER)
            {{- end }}
            - --components=node
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: SEAWEEDFS_FILER
              value: {{ .Values.seaweedfsFiler | quote }}
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DRIVER_NAME
              value: {{ .Values.driverName | quote }}
            {{- if .Values.node.injectTopologyInfoFromNodeLabel.enabled }}
            - name: DATACENTER
              valueFrom:
                fieldRef:
                  # Injected by ModRule 'inject-topology-labels'
                  fieldPath: metadata.labels['dataCenter']
            {{- end }}
            {{- if .Values.tlsSecret }}
            - name: WEED_GRPC_CLIENT_KEY
              value: /var/run/secrets/app/tls/tls.key
            - name: WEED_GRPC_CLIENT_CERT
              value: /var/run/secrets/app/tls/tls.crt
            - name: WEED_GRPC_CA
              value: /var/run/secrets/app/tls/ca.crt
            {{- end }}
            {{- with .Values.logVerbosity }}
            - name: WEED_V
              value: {{ . | quote }}
            {{- end }}
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          {{- with .Values.node.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            {{- with .failureThreshold }}
            failureThreshold: {{ . }}
            {{- end }}
            {{- with .initialDelaySeconds }}
            initialDelaySeconds: {{ . }}
            {{- end }}
            {{- with .timeoutSeconds }}
            timeoutSeconds: {{ . }}
            {{- end }}
            {{- with .periodSeconds }}
            periodSeconds: {{ . }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: plugins-dir
              mountPath: {{ .Values.node.volumes.plugins_dir }}
              mountPropagation: "Bidirectional"
            - name: pods-mount-dir
              mountPath: {{ .Values.node.volumes.pods_mount_dir }}
              mountPropagation: "Bidirectional"
            - mountPath: /dev
              name: device-dir
            {{- if .Values.tlsSecret }}
            - name: tls
              mountPath: /var/run/secrets/app/tls
            {{- end }}
            - name: cache
              mountPath: /var/cache/seaweedfs
          resources: {{ toYaml .Values.node.resources | nindent 12 }}

        # driver registrar
        - name: driver-registrar
          image: {{ .Values.csiNodeDriverRegistrar.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --http-endpoint=:9809
            #- --v=5
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{ .Values.node.volumes.plugins_dir }}/{{ .Values.driverName }}/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- with .Values.csiNodeDriverRegistrar.livenessProbe }}
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            {{- with .failureThreshold }}
            failureThreshold: {{ . }}
            {{- end }}
            {{- with .initialDelaySeconds }}
            initialDelaySeconds: {{ . }}
            {{- end }}
            {{- with .timeoutSeconds }}
            timeoutSeconds: {{ . }}
            {{- end }}
            {{- with .periodSeconds }}
            periodSeconds: {{ . }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi/
            - name: registration-dir
              mountPath: /registration/
          resources: {{ toYaml .Values.csiNodeDriverRegistrar.resources | nindent 12 }}

        # liveness probe
        {{- if .Values.node.livenessProbe }}
        - name: csi-liveness-probe
          image: {{ .Values.csiLivenessProbe.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --csi-address=$(ADDRESS)
            - --http-endpoint=:9808
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          ports:
            - containerPort: 9808
              name: livenessprobe
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
          resources: {{ toYaml .Values.csiLivenessProbe.resources | nindent 12 }}
        {{- end }}

      volumes:
        - name: registration-dir
          hostPath:
            path: {{ .Values.node.volumes.registration_dir }}
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: {{ .Values.node.volumes.plugins_dir }}/{{ .Values.driverName }}
            type: DirectoryOrCreate
        - name: plugins-dir
          hostPath:
            path: {{ .Values.node.volumes.plugins_dir }}
            type: Directory
        - name: pods-mount-dir
          hostPath:
            path: {{ .Values.node.volumes.pods_mount_dir }}
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
        - name: cache
          emptyDir: {}
        {{- if .Values.tlsSecret }}
        - name: tls
          secret:
            secretName: {{ .Values.tlsSecret }}
        {{- end }}
{{- end }}
